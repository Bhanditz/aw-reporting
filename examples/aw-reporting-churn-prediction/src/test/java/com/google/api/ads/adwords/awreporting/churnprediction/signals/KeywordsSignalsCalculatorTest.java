package com.google.api.ads.adwords.awreporting.churnprediction.signals;

import com.google.api.ads.adwords.awreporting.churnprediction.entities.AccountSignals;
import com.google.api.ads.adwords.awreporting.model.entities.ReportKeywords;

import junit.framework.Assert;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TODO: Insert description here. (generated by gustavomoreira)
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("classpath:aw-report-churn-prediction-test-beans.xml")
public class KeywordsSignalsCalculatorTest {
  @Autowired
  private KeywordsSignalsCalculator keywordsSignalsCalculator;

  @Test
  public void testSetKeywordSignals() {
    List<ReportKeywords> keywordData = new ArrayList<>();

    ReportKeywords row = new ReportKeywords();
    row.setQualityScore(1);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(2);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(3);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(4);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(5);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(6);
    row.setMaxCpc(new BigDecimal(5.4));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(7);
    row.setMaxCpc(new BigDecimal(4.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(8);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(9);
    row.setMaxCpc(new BigDecimal(5.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(10);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(0);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(7);
    row.setMaxCpc(new BigDecimal(2.5));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(6);
    row.setMaxCpc(new BigDecimal(3.0));
    keywordData.add(row);

    row = new ReportKeywords();
    row.setQualityScore(6);
    row.setMaxCpc(new BigDecimal(3.5));
    keywordData.add(row);

    AccountSignals accountSignals = new AccountSignals();
    this.keywordsSignalsCalculator.fillOutKeywordSignalsFields(accountSignals, keywordData);

    Assert.assertEquals(14, accountSignals.getActiveKeywordCount());
    Assert.assertEquals(5.28571, accountSignals.getAvgQualityScore(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore0Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore1Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore2Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore3Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore4Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore5Percent(), 0.0001);
    Assert.assertEquals(0.21428, accountSignals.getKwScore6Percent(), 0.0001);
    Assert.assertEquals(0.14285, accountSignals.getKwScore7Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore8Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore9Percent(), 0.0001);
    Assert.assertEquals(0.07142, accountSignals.getKwScore10Percent(), 0.0001);

    Assert.assertEquals(0.42857, accountSignals.getKeywordLowQsRatio(), 0.0001);

    Assert.assertEquals(5.5, accountSignals.getKeywordMaxCpcMax(), 0.0001);
  }
}
